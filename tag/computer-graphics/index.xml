<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computer Graphics | Manuel Pagliuca</title><link>https://manuelpagliuca.github.io/tag/computer-graphics/</link><atom:link href="https://manuelpagliuca.github.io/tag/computer-graphics/index.xml" rel="self" type="application/rss+xml"/><description>Computer Graphics</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 27 Jun 2021 00:00:00 +0000</lastBuildDate><image><url>https://manuelpagliuca.github.io/media/icon_hu4a5b1b591c5ae08b60d2e1d27385e465_426_512x512_fill_lanczos_center_3.png</url><title>Computer Graphics</title><link>https://manuelpagliuca.github.io/tag/computer-graphics/</link></image><item><title>CUDA Ray Tracer</title><link>https://manuelpagliuca.github.io/project/rt/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/project/rt/</guid><description>&lt;p>GPU Computing Course, July 2021, M.Sc. in Computer Science @UniMi&lt;/p>
&lt;h2 id="about-the-project">About the project&lt;/h2>
&lt;p>During the course of &lt;strong>GPU Computing&lt;/strong> I decided to implement my old version of the Ray Tracer (based on the
&lt;em>Ray Tracing in One
Weekend&lt;/em> from
&lt;a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html" target="_blank">Peter Shirley&lt;/a>
)
on &lt;strong>CUDA&lt;/strong>. In
&lt;a href="https://manuelpagliuca.github.io/uploads/GPU_COMPUTING___RAY_TRACER.pdf" target="_blank">this&lt;/a>
paper I compared
the two Ray Tracers underlining the
huge differences in rendering speed (even without achieving the best warp efficiency).&lt;br>&lt;br>
For the comparison I used the same scene in both the implementation composed by 8 different spheres with
different
materials between &lt;em>lambertian&lt;/em>, &lt;em>metal&lt;/em> and &lt;em>dielectrics&lt;/em>. I highly recommend to check the comparisons
and metrics at the end of the paper, the GitHub repository is at
&lt;a href="https://github.com/manuelpagliuca/Ray-Tracer-CUDA" target="_blank">this&lt;/a>
link if you want to see some
render just download
&lt;a href="https://manuelpagliuca.github.io/uploads/GPU_COMPUTING_RENDERS.zip">this&lt;/a>
zip.&lt;/p></description></item><item><title>Deferred renderer</title><link>https://manuelpagliuca.github.io/project/render/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/project/render/</guid><description>&lt;p>Real-Time Graphics Programming Course, July 2021, M.Sc. in Computer Science @UniMi&lt;/p>
&lt;h2 id="about-the-project">About the project&lt;/h2>
&lt;p>This was a project I made for the course of Real-time Graphics Programming. The course provided extensive knowledge about real-time computer graphics (you can check the
&lt;a href="https://manuelpagliuca.github.io/uploads/Appunti_RTGP.pdf" target="_blank">notes&lt;/a>
I took). At the end of the course, in addition to an oral exam, there was a project related to graphic programming to be developed with OpenGL. I asked Prof. Gadia if there was the possibility of developing it with Vulkan, he granted me the possibility to take this extra-step, it was very tiring but fruitful from the point of view of learning.&lt;/p>
&lt;p>The project consists in a deferred renderer to improve the overall efficiency of the application in the usage of lights. The scene is composed of three models of the same character, a floor and twenty lights (whose movement and color can be modified), there is the
&lt;a href="https://manuelpagliuca.github.io/uploads/DEFERRED_RENDERING___RTGP.pdf" target="_blank">notes&lt;/a>
containing the various metrics obtained using a different number of lights. The GitHub repository is accessible at
&lt;a href="https://github.com/manuelpagliuca/Vulkan-Deferred-Renderer" target="_blank">this&lt;/a>
link.&lt;/p></description></item><item><title>L-system in Unity</title><link>https://manuelpagliuca.github.io/project/l-system/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/project/l-system/</guid><description>&lt;p>Artificial Intelligence for Videogames course, July 2022, M.Sc. in Computer Science @UniMi&lt;/p>
&lt;h2 id="about-the-project">About the project&lt;/h2>
&lt;p>This is a project for the course of A.I. for VideoGames at University of Milan, A.Y. 2021/2022. The aim of the project is to implement a Lindenmayer system for procedural generation of tree using discrete distributions (pseudo-random integers) for enhancing the believability of the project.&lt;/p>
&lt;center>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/luaC1rPKbKg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>&lt;/iframe>&lt;/center>
Check the YouTube video for check how the application works while listening to a synthetic explanation. If you want to look at the LateX report, just click
&lt;a href="https://manuelpagliuca.github.io/uploads/L_SYSTEM_AI4V_REPORT.pdf">this link&lt;/a>
. You are invited to send a pull request to the GitHub
&lt;a href="https://github.com/manuelpagliuca/l-system">repository&lt;/a>
.</description></item><item><title>Subdivision of surfaces</title><link>https://manuelpagliuca.github.io/project/geometry/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/project/geometry/</guid><description>&lt;p>Computational Geometry Course, March 2021, M.Sc. in Computer Science @UniMi&lt;/p>
&lt;h2 id="about-the-project">About the project&lt;/h2>
&lt;figure id="figure-icosahedron-obtained-with-the-application">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="Icosahedron obtained with the application." srcset="
/project/geometry/img_hu92825ff421db5b452c03fb61016d2789_175632_61a89ba5ff0edc125b01e8b25e2f98da.webp 400w,
/project/geometry/img_hu92825ff421db5b452c03fb61016d2789_175632_5e4e12b5ba32a7e3a372e59919161a64.webp 760w,
/project/geometry/img_hu92825ff421db5b452c03fb61016d2789_175632_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://manuelpagliuca.github.io/project/geometry/img_hu92825ff421db5b452c03fb61016d2789_175632_61a89ba5ff0edc125b01e8b25e2f98da.webp"
width="760"
height="681"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Icosahedron obtained with the application.
&lt;/figcaption>&lt;/figure>
&lt;p>The aims of this project was to study how the tessellation works with simple domains and to
implement the basic logic for triangulate the vertices of simple
objects like cubes and then with more complex like torus, sphere and cylinder.&lt;/p>
&lt;center>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/tK8yzO6Btho"
title="YouTube video player" frameborder="0"
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
allowfullscreen>&lt;/iframe>&lt;/center>
For the course project there was also a need to produce a report in the form of &lt;a
href="http://www.mat.unimi.it/users/alzati/Geometria_Computazionale_98-99/apps/trietas/index.html">website&lt;/a>
(fully in &lt;i>italian&lt;/i>) which is hosted from the university's mathematics department &lt;i>Federigo Enriques&lt;/i>. It contains
the theory behind the software, the technique involved, user manual of the application and lot of example videos about the application.
&lt;p>Is possible to download the source code of the project from the &lt;a
href="https://github.com/manuelpagliuca/Computational_Geometry_2021">GitHub Repository&lt;/a> by
following this link. The course was a complete math course and the project was developed using the
&lt;strong>OpenGL&lt;/strong> specification.&lt;/p>
&lt;p>By accessing the &lt;a
href="http://www.mat.unimi.it/users/alzati/Geometria_Computazionale_98-99/corso/autori.html">authors
section&lt;/a> of the course website, is possible to read under my
name a note from the course teacher saying: &lt;br>&lt;br>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;has developed the project related to the triangulation and tessellation of the lateral
surface of some geometric solids obtaining truly amazing visual effects.&amp;rdquo;&lt;/em> - Prof. Alzati&lt;/p></description></item></channel></rss>