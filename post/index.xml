<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Manuel Pagliuca</title><link>https://manuelpagliuca.github.io/post/</link><atom:link href="https://manuelpagliuca.github.io/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 03 Feb 2024 10:02:31 +0100</lastBuildDate><image><url>https://manuelpagliuca.github.io/media/icon_hu4a5b1b591c5ae08b60d2e1d27385e465_426_512x512_fill_lanczos_center_3.png</url><title>Posts</title><link>https://manuelpagliuca.github.io/post/</link></image><item><title>Binary Search</title><link>https://manuelpagliuca.github.io/post/binary-search/</link><pubDate>Sat, 03 Feb 2024 10:02:31 +0100</pubDate><guid>https://manuelpagliuca.github.io/post/binary-search/</guid><description>&lt;h2 id="basic-binary-search">Basic binary search&lt;/h2>
&lt;p>The &lt;a href="https://en.wikipedia.org/wiki/Binary_search_algorithm" target="_blank" rel="noopener">binary search&lt;/a> it&amp;rsquo;s a &lt;strong>search algorithm&lt;/strong> which find the index of a particular value which is stored in a &lt;strong>sorted&lt;/strong> array.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Random_access" target="_blank" rel="noopener">Random access&lt;/a> is a requirement for performing this search.&lt;/li>
&lt;/ul>
&lt;p>The binary search classical formalization is the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is the most intuitive way of understanding the behaviour of this algorithm, let&amp;rsquo;s walk through the iterations.&lt;/p>
&lt;h3 id="first-loop">First loop&lt;/h3>
&lt;p>Initial variables:&lt;/p>
&lt;ul>
&lt;li>&lt;code>nums = [1, 3, 4, 5, 6, 8, 9, 10, 11, 12]&lt;/code>&lt;/li>
&lt;li>&lt;code>target = 5&lt;/code>&lt;/li>
&lt;li>&lt;code>start = 0, end = 9&lt;/code>
Algorithm steps:&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>The mid index get computed as &lt;code>mid = 0 + 9 / 2 = 4&lt;/code>, this is a bad case, because the &lt;code>target&lt;/code> is one position away from the &lt;code>mid&lt;/code>.
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-00.drawio.png" alt="bs-0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test &lt;code>target&lt;/code> against mid value:
&lt;ol>
&lt;li>Is &lt;code>target&lt;/code> equal to mid value? No (&lt;code>5 != 6&lt;/code>)&lt;/li>
&lt;li>Is &lt;code>target&lt;/code> smaller than mid value? Yes (&lt;code>5 &amp;lt; 6&lt;/code>), let&amp;rsquo;s continue the search on the left side of the mid element (&lt;code>end = mid - 1&lt;/code>).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-01.drawio.png" alt="bs-1" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="second-loop">Second loop&lt;/h3>
&lt;ol>
&lt;li>The mid index get computed as &lt;code>mid = 0 + 3 / 2 = 1&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-02.drawio.png" alt="bs-2" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test &lt;code>target&lt;/code> against mid value:
&lt;ol>
&lt;li>Is &lt;code>target&lt;/code> equal to mid value? No (&lt;code>5 != 3&lt;/code>)&lt;/li>
&lt;li>Is &lt;code>target&lt;/code> smaller than mid value? No (&lt;code>5 &amp;gt; 3&lt;/code>)&lt;/li>
&lt;li>Is &lt;code>target&lt;/code> bigger than mid value? Yes, let&amp;rsquo;s continue the search on the right side of the mid element (&lt;code>start = mid + 1&lt;/code>).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-03.drawio.png" alt="bs-3" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="third-loop">Third loop&lt;/h3>
&lt;ol>
&lt;li>The mid index get computed as &lt;code>mid = 2 + 3 / 2 = 2&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-04.drawio.png" alt="bs-4" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test &lt;code>target&lt;/code> against mid value:
&lt;ol>
&lt;li>Is &lt;code>target&lt;/code> equal to mid value? No (&lt;code>5 != 4&lt;/code>)&lt;/li>
&lt;li>Is &lt;code>target&lt;/code> smaller than mid value? No (&lt;code>5 &amp;gt; 4&lt;/code>)&lt;/li>
&lt;li>Is &lt;code>target&lt;/code> bigger than mid value? Yes, let&amp;rsquo;s continue the search on the right side of the mid element (&lt;code>start = mid + 1&lt;/code>).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-05.drawio.png" alt="bs-5" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="fourth-loop">Fourth loop&lt;/h3>
&lt;ol>
&lt;li>The mid index get computed as &lt;code>mid = 3 + 3 / 2 = 3&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-06.drawio.png" alt="bs-6" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test &lt;code>target&lt;/code> against mid value:
&lt;ol>
&lt;li>Is &lt;code>target&lt;/code> equal to mid value? Yes (&lt;code>5 == 5&lt;/code>), the &lt;code>mid&lt;/code> index is returned.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>Although the conceptual idea of binary search is comparatively straightforward, the details can be tricky.&lt;/p>
&lt;p>The real pit of binary search is not the integer overflow, but the whether to add one to or subtract one from &lt;code>mid&lt;/code>, and where to use &lt;code>&amp;lt;=&lt;/code> or &lt;code>&amp;lt;&lt;/code> in the loop condition.&lt;/p>
&lt;h2 id="generalized-framework">Generalized framework&lt;/h2>
&lt;p>&lt;strong>Minimizing k which satisfies the &lt;code>condition(k)&lt;/code> function.&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">condition&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">search_space&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">search_space&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">condition&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="c1"># Inclusive reduction of the right boundary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1"># Exclusive reduction of the left boundary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">start&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>After exiting the loop, &lt;code>start&lt;/code> is the minimal k satisfying the inner &lt;code>condition&lt;/code> function.&lt;/strong>&lt;/p>
&lt;p>We should care about three parts of this template:&lt;/p>
&lt;ul>
&lt;li>Initialisation of the boundary variables &lt;code>start&lt;/code> and &lt;code>end&lt;/code> to specify the &lt;strong>search space&lt;/strong> (all the possible elements).&lt;/li>
&lt;li>Decide return value.&lt;/li>
&lt;li>Design the &lt;code>condition&lt;/code> function, this is the hardest part.&lt;/li>
&lt;/ul>
&lt;p>Let&amp;rsquo;s see the basic search with the generalized framework:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">start&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This looks a bit less readable than the classical algorithm, but understanding the mechanics behind this will allow to gneeralize the binar search to many more coding problems.&lt;/p>
&lt;p>&lt;em>Why are we using &lt;code>&amp;gt;=&lt;/code> in the &lt;strong>condition function&lt;/strong>?&lt;/em>&lt;/p>
&lt;p>Think in this way, we are &lt;strong>searching for the minimum k for which &lt;code>nums[mid] &amp;gt;= target&lt;/code>&lt;/strong>, we are searching the value (index) that satisfies the condition. If we would use &lt;code>&amp;gt;&lt;/code> instead of &lt;code>&amp;gt;=&lt;/code> we would get the index k which is greater (and not equal) than &lt;code>target&lt;/code>.&lt;/p>
&lt;p>Considering the following example with just two elements of an array, if we apply the &lt;strong>condition function&lt;/strong> with &lt;code>&amp;gt;&lt;/code>, it would trigger the expression in the &lt;code>else&lt;/code> branch, which will set &lt;code>start&lt;/code> to &lt;code>mid + 1&lt;/code>.&lt;/p>
&lt;img src="./only-greater-0.drawio.png" alt="image" width="20%" height="auto">
&lt;p>This would stop the loop (&lt;code>start == end&lt;/code>), but now &lt;code>start&lt;/code> (&lt;strong>k&lt;/strong>) is the index of an element greater than &lt;code>target&lt;/code>.&lt;/p>
&lt;img src="./only-greater-1.drawio.png" alt="image" width="20%" height="auto">
&lt;p>&lt;em>What return condition should I use if the element is not in the list?&lt;/em>&lt;/p>
&lt;p>That&amp;rsquo;s a nice question, and it should be specified from the problem itself, the previous code was assuming that the element was always present. If the &lt;code>target&lt;/code> can miss, a common requirement is to return &lt;code>-1&lt;/code>, which can be easily written in the return condition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1st-loop">1st loop&lt;/h3>
&lt;p>Initial variables:&lt;/p>
&lt;ul>
&lt;li>&lt;code>nums = [1, 3, 4, 5, 6, 8, 9, 10, 11, 12]&lt;/code>&lt;/li>
&lt;li>&lt;code>target = 5&lt;/code>&lt;/li>
&lt;li>&lt;code>start = 0, end = 9&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Algorithm steps:&lt;/p>
&lt;ol>
&lt;li>&lt;code>mid = 4&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-0.drawio.png" alt="bs-fw-0" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test the &lt;strong>condition function&lt;/strong> &lt;code>nums[mid] &amp;gt;= target&lt;/code>:
&lt;ol>
&lt;li>Is &lt;code>nums[mid] &amp;gt;= target&lt;/code>? Yes (&lt;code>6 &amp;gt; 5&lt;/code>), reduce the &lt;strong>search space&lt;/strong> from the right (&lt;code>mid&lt;/code> excluded).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-1.drawio.png" alt="bs-fw-1" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;h3 id="2nd-loop">2nd loop&lt;/h3>
&lt;ol>
&lt;li>&lt;code>mid = 2&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-2.drawio.png" alt="bs-fw-2" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test the &lt;strong>condition function&lt;/strong> &lt;code>nums[mid] &amp;gt;= target&lt;/code>:
&lt;ol>
&lt;li>Is &lt;code>nums[mid] &amp;gt;= target&lt;/code>? No (&lt;code>4 &amp;lt; 5&lt;/code>)&lt;/li>
&lt;li>Then &lt;code>nums[mid] &amp;lt; target&lt;/code>, reduce the &lt;strong>search space&lt;/strong> from the left (&lt;code>mid&lt;/code> included).
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-3.drawio.png" alt="bs-fw-3" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="3rd-loop">3rd loop&lt;/h3>
&lt;ol>
&lt;li>&lt;code>mid = 3&lt;/code>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-4.drawio.png" alt="bs-fw-4" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;li>Test the &lt;strong>condition function&lt;/strong> &lt;code>nums[mid] &amp;gt;= target&lt;/code>:
&lt;ol>
&lt;li>Is &lt;code>nums[mid] &amp;gt;= target&lt;/code>? Yes (&lt;code>5 == 5&lt;/code>), reduce the &lt;strong>search space&lt;/strong> from the right (&lt;code>mid&lt;/code> excluded).
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./bs-framework-5.drawio.png" alt="bs-fw-5" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>The next loop condition check will be evaluated as &lt;code>False&lt;/code> since &lt;code>start == end == 3&lt;/code>&lt;/p>
&lt;h2 id="application-of-the-generalized-framework">Application of the generalized framework&lt;/h2>
&lt;h3 id="sqrttarget">&lt;code>sqrt(target)&lt;/code>&lt;/h3>
&lt;p>Searching for the minimal k satisfying &lt;code>k^2 &amp;gt; target&lt;/code> condition, then the answer is &lt;code>k - 1&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>The loop will terminate with &lt;code>start == end&lt;/code>, in the last iteration if &lt;strong>inner condition function&lt;/strong>
is satisfied, the &lt;code>start&lt;/code> variable will contain &lt;strong>the minimal &lt;code>k&lt;/code> for which &lt;code>mid * mid &amp;gt; target&lt;/code>&lt;/strong>, this means that the answer is &lt;code>start - 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">my_sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is also possible to use as return value the &lt;code>mid&lt;/code> index if declared outside the loop cycle, the code will behave in the same way for perfect squares, while it will approximate by &lt;em>excess&lt;/em> non-square inputs (the code will approximate by &lt;em>default&lt;/em>).&lt;/p>
&lt;h3 id="search-insert-position">Search Insert Position&lt;/h3>
&lt;p>&lt;strong>TODO: THIS ARTICLE HAS TO BE COMPLETED, AT THE MOMENT IS JUST A BUNCH OF NOTES&lt;/strong>&lt;/p>
&lt;p>Searching for the &lt;strong>minimal k value satisfying &lt;code>nums[k] &amp;gt;= target&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">search_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="why--instead-of--in-the-loop-condition">Why &lt;code>&amp;lt;=&lt;/code> instead of &lt;code>&amp;lt;&lt;/code> in the loop condition?&lt;/h3>
&lt;p>Because the initial assignment of &lt;code>end&lt;/code> is &lt;code>len(nums) - 1&lt;/code>, which is the index of the last element, and not &lt;code>len(nums)&lt;/code> (which contains an extra &lt;em>immaginary&lt;/em> element).&lt;/p>
&lt;ul>
&lt;li>The first approach has a &lt;strong>search space&lt;/strong> of &lt;code>[start, end]&lt;/code>&lt;/li>
&lt;li>The second approach has a &lt;strong>search space&lt;/strong> of &lt;code>[start, end)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The binary search can terminate when the value is found &lt;code>nums[mid] == target&lt;/code>, but if not found &lt;strong>it should terminate when the search interval is empty&lt;/strong>, which means that if you don&amp;rsquo;t have a place for searching it, you haven&amp;rsquo;t found it.&lt;/p>
&lt;p>Termination conditions:&lt;/p>
&lt;ul>
&lt;li>For &lt;code>start &amp;lt;= end&lt;/code> is &lt;code>start == end + 1&lt;/code>, when the &lt;code>start&lt;/code> index surpass by 1 element the &lt;code>end&lt;/code> index.&lt;/li>
&lt;li>For &lt;code>start &amp;lt; end&lt;/code> is &lt;code>start == end&lt;/code>, when they are both on the same element.&lt;/li>
&lt;/ul>
&lt;h3 id="why-left--mid--1-and-right--mid---1">Why &lt;code>left = mid + 1&lt;/code> and &lt;code>right = mid - 1&lt;/code>?&lt;/h3>
&lt;h3 id="flaws-of-the-basic-algorithm">Flaws of the basic algorithm&lt;/h3>
&lt;p>This algorithm is great and simple, but has some limitations. In some specific problems, some target number could be repeated along the array, and the problem requiremnt could be the left border or right border of this sequence.&lt;/p>
&lt;p>&lt;strong>The current algorithm can&amp;rsquo;t handle this issue.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Adding a &lt;strong>linear search&lt;/strong> to the found sequence will compromise the complexity in time of the binary search.&lt;/li>
&lt;/ul>
&lt;h2 id="binary-search-101">Binary Search 101&lt;/h2>
&lt;p>When it comes to implementation, it&amp;rsquo;s rather difficult to write a bug-free code in just a few minutes.&lt;/p>
&lt;ul>
&lt;li>Should I use &lt;code>start &amp;lt; end&lt;/code> or &lt;code>start &amp;lt;= end&lt;/code> as loop condition?&lt;/li>
&lt;li>How to initialize the boundary variable &lt;code>start&lt;/code> and &lt;code>end&lt;/code>?&lt;/li>
&lt;li>How to update the boundary? &lt;code>left = mid&lt;/code> or &lt;code>left = mid + 1&lt;/code>, &amp;hellip;&lt;/li>
&lt;li>When to exit the loop?&lt;/li>
&lt;/ul>
&lt;p>This because in real-life problems and coding questions, it&amp;rsquo;s really hard that a classical implementation of the algorithm will be required.&lt;/p>
&lt;h3 id="search-space-boundary">Search space boundary&lt;/h3>
&lt;p>Normally we can see this kind of boundary initialization:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But this is not always the case.&lt;/p>
&lt;blockquote>
&lt;p>The boundary is the range of elements we will be searching from. The initial boudnary should include all the elmeents, meaning all the possible answers should be included.&lt;/p>
&lt;/blockquote>
&lt;p>For example, in &lt;a href="https://leetcode.com/problems/search-insert-position/description/" target="_blank" rel="noopener">LeetCode #35&lt;/a> if the &lt;code>target&lt;/code> isn&amp;rsquo;t found we have to return the the index of where the element could be, and this could be even after the last element.&lt;/p>
&lt;p>This means that the search space will be bigger:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="calculating-mid">Calculating &lt;code>mid&lt;/code>&lt;/h3>
&lt;p>When the number are extremely big it can result in an &lt;a href="https://en.wikipedia.org/wiki/Integer_overflow" target="_blank" rel="noopener">&lt;strong>integer overflow&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>There are three ways of computing the &lt;code>mid&lt;/code> index, from the worst to the best.&lt;/p>
&lt;h4 id="first-approach">First approach&lt;/h4>
&lt;blockquote>
&lt;p>&lt;code>mid = (start + end) / 2&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>This is the most readable approach, but the risk of incurring in &lt;strong>integer overflow&lt;/strong> (going beyond the representation limits for integers) is high with bigger values of &lt;code>start&lt;/code> and &lt;code>end&lt;/code>.&lt;/p>
&lt;h3 id="second-approach">Second approach&lt;/h3>
&lt;blockquote>
&lt;p>&lt;code>mid = start + (end - start) // 2&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>This approach is a refinement of the first, subtracting &lt;code>start&lt;/code> from &lt;code>end&lt;/code> reduces the amount of numbers involved in the sum.&lt;/p>
&lt;h3 id="third-approach">Third approach&lt;/h3>
&lt;blockquote>
&lt;p>&lt;code>mid = (start + end) &amp;gt;&amp;gt; 1&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>The &lt;strong>right shift&lt;/strong> bitwise operator doesn&amp;rsquo;t introduce new bits in the representation of a number, this means that can&amp;rsquo;t cause an overflow on big numbers.&lt;/p>
&lt;h3 id="left-and-right-mid">Left and right mid&lt;/h3>
&lt;p>When we are dealing with an &lt;strong>even&lt;/strong> number of elements, it is our choice to pick the &lt;strong>left mid&lt;/strong> or the &lt;strong>right mid&lt;/strong>&lt;/p>
&lt;p>Left mid (&lt;strong>integer division&lt;/strong> prefer the left side of the array):&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>mid = start + (end - start) // 2&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>Right mid:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>mid = start + (end - start + 1) // 2&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="boundary-shrinking-strategy">Boundary shrinking strategy&lt;/h2>
&lt;p>The best strategy to adopt is to always use a logic that &lt;strong>excludes&lt;/strong> &lt;code>mid&lt;/code> from the &lt;strong>search space&lt;/strong>.&lt;/p>
&lt;p>If the target is less than &lt;code>mid&lt;/code>, it can&amp;rsquo;t be &lt;code>mid&lt;/code>, so we can exclude it &lt;code>end = mid - 1&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;/code>&lt;/pre>&lt;/div>&lt;p>si ma perchè?..&lt;/p>
&lt;h3 id="symmetric-variant">Symmetric variant&lt;/h3>
&lt;h2 id="loop-condition">Loop condition&lt;/h2>
&lt;p>Using only &lt;code>&amp;lt;&lt;/code> the &lt;strong>only condition&lt;/strong> the loop exits is &lt;code>start == end&lt;/code>, this means that they are pointing to only one element.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>while (start &amp;lt; high):&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="infinity-loop">Infinity loop&lt;/h2>
&lt;p>A bad choice of &lt;a href="#left-and-right-mid">left and right mid&lt;/a> will lead to &lt;strong>infinity loop&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>The choice of &lt;code>mid&lt;/code> and our shrinking logic has to work together in a way that every time, at least 1 element is excluded.&lt;/strong>&lt;/p>
&lt;p>Let&amp;rsquo;s consider the base case when we have only two elements (which is like having &lt;em>even&lt;/em> number of elements in the input), and how
two misplaced mid will lead to infinite loop.&lt;/p>
&lt;h3 id="wrong-left-mid">Wrong left mid&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Using this logic with the &lt;strong>left mid&lt;/strong>, in the case the execution will reach the &lt;code>else&lt;/code> (this means that the &lt;code>target&lt;/code> isn&amp;rsquo;t the element pointed from &lt;code>mid&lt;/code>), it will just keep &amp;ldquo;update&amp;rdquo; the &lt;code>mid&lt;/code> element to the same value of &lt;code>start&lt;/code>, and this will stuck the program for ever.&lt;/p>
&lt;p>In this case we had to use the &lt;strong>right mid&lt;/strong> instead &lt;code>mid = start + (end - start + 1) // 2&lt;/code>&lt;/p>
&lt;img src="./bs-2-elements.drawio.png" alt="image" width="20%" height="auto">
&lt;img src="./bs-2-elements-mid.drawio.png" alt="image" width="20%" height="auto">
&lt;h3 id="wrong-right-mid">Wrong right mid&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same happens simmetrically with the &lt;strong>right mid&lt;/strong>, the fix will be using the &lt;strong>left mid&lt;/strong> &lt;code>mid = start + (end - start) // 2&lt;/code>&lt;/p>
&lt;img src="./bs-2-elements-2.drawio.png" alt="image" width="20%" height="auto">
&lt;img src="./bs-2-elems-2-mid.drawio.png" alt="image" width="20%" height="auto">
&lt;h2 id="complexity">Complexity&lt;/h2>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;p>These notes are heavily based on an article I found on Leetcode, rewriting and drawing the diagrams was a way for understanding the concepts better.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-search/solutions/423162/Binary-Search-101-The-Ultimate-Binary-Search-Handbook/" target="_blank" rel="noopener">Binary Search 101&lt;/a> - AminiCK&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Binary_search_algorithm" target="_blank" rel="noopener">Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/discuss/general-discussion/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems" target="_blank" rel="noopener">[Python] Powerful Ultimate Binary Search Template. Solved many problems&lt;/a> - zhijun_liao&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=GU7DpgHINWQ" target="_blank" rel="noopener">Binary Search tutorial (C++ and Python)&lt;/a> - Errichto&lt;/li>
&lt;/ul></description></item><item><title>Continuos Learning</title><link>https://manuelpagliuca.github.io/post/continuos-learning/</link><pubDate>Sat, 18 Nov 2023 13:57:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/post/continuos-learning/</guid><description>&lt;p>&lt;em>Latest post update: 19 November 2023, 13:32 UTC +1h&lt;/em>&lt;/p>
&lt;center> 🚨 &lt;b>The whole blog post is a work in progress!&lt;/b> 🚨&lt;/center>
&lt;blockquote>
&lt;p>When you see 🚨, this is a suggestion for the creator of the post (me), to update this blog post since I&amp;rsquo;m not following any structure, I&amp;rsquo;m just writing as it came out and adjusting by re-reading and rewriting the post 😊&lt;/p>
&lt;/blockquote>
&lt;p>Since when I was a kid I wanted to know as much as I could, I received my first computer when i was 8 years old, and since then I got hooked from internet, video games and programming.&lt;/p>
&lt;p>I stop talking about this side of my self (I will do it in another post), the thing that I wanted to introduce is that I would like to have a way for quantify, store, and expand my knowledge.&lt;/p>
&lt;p>🚨 Question to answer for the post:&lt;/p>
&lt;ul>
&lt;li>Why I created this post?&lt;/li>
&lt;li>How can this be helpful to me and to others?&lt;/li>
&lt;li>Education system vs learning system&lt;/li>
&lt;li>The problem with school&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="how-i-take-notes">How I take notes&lt;/h2>
&lt;p>🚨 Major structure 🚨&lt;/p>
&lt;ul>
&lt;li>Obsidian&lt;/li>
&lt;li>Anki&lt;/li>
&lt;li>Techniques&amp;hellip;&lt;/li>
&lt;li>Clear understanding of what he is saying&lt;/li>
&lt;li>Practical subject, I need to do practical exercise.&lt;/li>
&lt;/ul>
&lt;h2 id="mooc-courses">MOOC courses&lt;/h2>
&lt;h3 id="udemy-courses">Udemy courses&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Course&lt;/th>
&lt;th style="text-align:center">Purchases&lt;/th>
&lt;th style="text-align:center">State&lt;/th>
&lt;th style="text-align:center">Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/java-the-complete-java-developer-course/" target="_blank" rel="noopener">Java 17 Masterclass: Start Coding in 2023&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>17%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/complete-python-bootcamp/" target="_blank" rel="noopener">The Complete Python Bootcamp From Zero to Hero in Python&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>45%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/unrealcourse/" target="_blank" rel="noopener">Unreal Engine 5 C++ Developer: Learn C++ &amp;amp; Make Video Games&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/unityrpg/" target="_blank" rel="noopener">RPG Core Combat Creator: Learn Intermediate Unity C# Coding&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>60%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/unitycourse2/" target="_blank" rel="noopener">Complete C# Unity Game Developer 3D&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>2%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/unitycourse/" target="_blank" rel="noopener">Complete C# Unity Game Developer 2D&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/graphics-with-modern-opengl/" target="_blank" rel="noopener">Computer Graphics with Modern OpenGL and C++&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-OPENGL.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/flamenco-guitar-a/" target="_blank" rel="noopener">Flamenco Guitar&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>83%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/fundamentals-of-math/" target="_blank" rel="noopener">Master the Fundamentals of Math&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-MATH-FUND.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/integralcalc-algebra/" target="_blank" rel="noopener">Become an Algebra Master&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-ALGEBRA.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/geometry-basics/" target="_blank" rel="noopener">Become a Geometry Master&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-GEOMETRY.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/trig-by-krista-king/" target="_blank" rel="noopener">Become a Trigonometry &amp;amp; Precalculus Master&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>4%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/scrum-certification/" target="_blank" rel="noopener">Scrum Master Certification 2023 + Agile Scrum Certification&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-SCRUM.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/learn-the-vulkan-api-with-cpp/" target="_blank" rel="noopener">Learn the Vulkan API with C++&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-VULKAN.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/kafka-streams/" target="_blank" rel="noopener">Apache Kafka Series - Kafka Streams for Data Processing&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-KAFKA-STREAMS.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/scrum-certification/" target="_blank" rel="noopener">Scrum Master Certification 2023 + Agile Scrum Certification&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-SCRUM.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/trig-by-krista-king/" target="_blank" rel="noopener">Become a Trigonometry &amp;amp; Precalculus Master&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>4%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/git-complete/" target="_blank" rel="noopener">Git Complete: The definitive, step-by-step guide to Git&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-GIT.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/modern-productivity/" target="_blank" rel="noopener">Modern Productivity: Superhuman Focus In A Distracted World&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-PRODUCTIVITY.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/stress-management-40-easy-ways-to-deal-with-stress/" target="_blank" rel="noopener">Stress Management: 40+ easy ways to deal with stress&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-STRESS.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/rock-guitar-masterclass/" target="_blank" rel="noopener">Ultimate Beginner Electric Guitar Masterclass&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>50%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/the-vocabulary-of-science/" target="_blank" rel="noopener">The Vocabulary of Science: First Steps to Science Literacy&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/critical-thinker-academy/" target="_blank" rel="noopener">Critical Thinker Academy: Learn to Think Like a Philosopher&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>25%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/advancedcommunicationskills/" target="_blank" rel="noopener">Advanced agile communication skills for 21st Century leaders&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>47%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/social-media-marketing-strategy-course/" target="_blank" rel="noopener">Social Media Marketing Strategy 2023: Launch Your SMM!&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/sports-nutrition-for-athletes-and-fitness-enthusiasts/" target="_blank" rel="noopener">Sports Nutrition for Athletes and Fitness Enthusiasts&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/minimalist-lifestyle-simplify-your-life-and-feel-amazing/" target="_blank" rel="noopener">Minimalist Lifestyle – Simplify Your Life! (Minimalism)&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/master-data-science-in-python/" target="_blank" rel="noopener">Data Manipulation in Python: Master Python, Numpy &amp;amp; Pandas&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/patterns-cplusplus/" target="_blank" rel="noopener">Design Patterns in Modern C++&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>10%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/java-multithreading/" target="_blank" rel="noopener">Java Multithreading&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>0%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/java-multithreading-concurrency-performance-optimization/" target="_blank" rel="noopener">Java Multithreading, Concurrency &amp;amp; Performance Optimization&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>34%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/secret-sauce-of-great-writing/" target="_blank" rel="noopener">Secret Sauce of Great Writing&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>20%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/finanza-e-investimenti-il-corso-completo/" target="_blank" rel="noopener">Finanza e Investimenti - Il Corso Completo&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>12%&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.udemy.com/course/complete-aspnet-core-21-course/" target="_blank" rel="noopener">.NET Core MVC - The Complete Guide 2023 [E-commerce] [.NET8]&lt;/a>&lt;/td>
&lt;td style="text-align:center">Date&lt;/td>
&lt;td style="text-align:center">&lt;strong>&lt;a href="https://manuelpagliuca.github.io/uploads/UC-DOT-NET.pdf">100% 📄&lt;/a>&lt;/strong>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="khan-academy">Khan Academy&lt;/h3>
&lt;p>I love Khan&amp;rsquo;s courses, and I hope to be able to complete the ones I like the most, there are a lot of them and I am particularly keen on taking good notes (transcripts in the case of humanities). If you don&amp;rsquo;t know who is Salman Khan (called Sal), there is a really nice 20 minutes &lt;a href="https://www.youtube.com/watch?v=nTFEUsudhfs" target="_blank" rel="noopener">TED talk&lt;/a> about his mission.&lt;/p>
&lt;p>At the moment I&amp;rsquo;m following only the World History course, and I stopped the other ones, since I recently changed my note taking system and consequently I have to migrate many courses data to the new one. But I&amp;rsquo;m loving it and that&amp;rsquo;s the important thing, since I was really disgusted by history during high school.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Course&lt;/th>
&lt;th style="text-align:center">State&lt;/th>
&lt;th style="text-align:center">Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/humanities/world-history" target="_blank" rel="noopener">World History&lt;/a>&lt;/td>
&lt;td style="text-align:center">~1 of 6 units&lt;/td>
&lt;td style="text-align:center">My plan is to study history backwards.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/math/ap-calculus-bc" target="_blank" rel="noopener">AP®︎/College Calculus BC&lt;/a>&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/math/linear-algebra" target="_blank" rel="noopener">Linear Algebra&lt;/a>&lt;/td>
&lt;td style="text-align:center">~1 of 3 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/math/ap-statistics" target="_blank" rel="noopener">AP®︎/College Statistics&lt;/a>&lt;/td>
&lt;td style="text-align:center">14 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/math/multivariable-calculus" target="_blank" rel="noopener">Multivariable calculus&lt;/a>&lt;/td>
&lt;td style="text-align:center">5 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/economics-finance-domain/ap-macroeconomics" target="_blank" rel="noopener">AP®︎/College Macroeconomics&lt;/a>&lt;/td>
&lt;td style="text-align:center">8 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/science/ap-college-physics-1" target="_blank" rel="noopener">AP®︎/College Physics 1&lt;/a>&lt;/td>
&lt;td style="text-align:center">5 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;a href="https://www.khanacademy.org/science/ap-physics-2" target="_blank" rel="noopener">AP®︎/College Physics 2&lt;/a>&lt;/td>
&lt;td style="text-align:center">8 units&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="youtube">YouTube&lt;/h3>
&lt;p>🚨 Search the playlist of educational video that you have watched on YouTube, or really important one 🚨&lt;/p></description></item><item><title>Why should you learn geography?</title><link>https://manuelpagliuca.github.io/post/should-learn-geography/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://manuelpagliuca.github.io/post/should-learn-geography/</guid><description>
&lt;figure id="figure-world-map">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="World map." srcset="
/post/should-learn-geography/world-map-1_huf15f3ba890c6c230d521f9341324f525_111111_d3bedc22cbf2a72af0a029d556088cce.webp 400w,
/post/should-learn-geography/world-map-1_huf15f3ba890c6c230d521f9341324f525_111111_f1422d01dac09103174033b9bf42e53b.webp 760w,
/post/should-learn-geography/world-map-1_huf15f3ba890c6c230d521f9341324f525_111111_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://manuelpagliuca.github.io/post/should-learn-geography/world-map-1_huf15f3ba890c6c230d521f9341324f525_111111_d3bedc22cbf2a72af0a029d556088cce.webp"
width="760"
height="562"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
World map.
&lt;/figcaption>&lt;/figure>
&lt;p>Maps are surely a fascinating tool for geographers and curious people, but they are just a little part of Geography.&lt;/p>
&lt;p>First of all, Geography is a science, it is the study of the earth’s surface (in all its various aspects of it, e.g. &lt;em>extension, distribution, biological, social,&lt;/em> …) and the relationship between people and their environments.&lt;/p>
&lt;p>As we can state, Geography is much bigger than Cartography and Topography, since it adds the investigation of dynamics and causes of the position of the Earth in space caused by phenomena and based on its characteristics.&lt;/p>
&lt;p>From Wikipedia :&lt;/p>
&lt;p>&lt;strong>Cartography&lt;/strong> is the set of scientific, technical, and artistic knowledge aimed at the representation, symbolic, but truthful, on flat (geographical maps) or spherical (globes) supports, of geographical, statistical, demographic, economic, political, cultural, relative to the geographic space represented.
&lt;strong>Topography&lt;/strong> is the science that has as its purpose the determination and metric representation through drawing a map with conventional signs of the Earth’s surface.
There are several branches of Geography, by the way, this intro was just for making clear that learning &lt;strong>country maps it’s different from learning Geography&lt;/strong>.&lt;/p>
&lt;p>If you are interested in learning more about Geography you should consider these resources :&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=Di5vJwH0VZ8&amp;amp;feature=youtu.be" target="_blank" rel="noopener">Crash Course Geography&lt;/a> from &lt;em>CrashCourse&lt;/em> on YouTube, seems the best way to start, I can’t wait for watching it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Other must lectures are “&lt;a href="https://en.wikipedia.org/wiki/Prisoners_of_Geography" target="_blank" rel="noopener">&lt;em>Prisoners of Geography: Ten Maps That Explain Everything About the World (Politics of Place)&lt;/em>&lt;/a>“, and “&lt;a href="https://en.wikipedia.org/wiki/The_Power_of_Geography" target="_blank" rel="noopener">&lt;em>The Power of Geography: Ten Maps That Reveal the Future of Our World&lt;/em>&lt;/a>” both by &lt;a href="https://en.wikipedia.org/wiki/Tim_Marshall_%28journalist%29" target="_blank" rel="noopener">Tim Marshall&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“&lt;a href="https://www.amazon.it/Geografia-umana-approccio-visuale-Greiner/dp/8860085683" target="_blank" rel="noopener">&lt;em>Geografia umana. Un approccio visuale&lt;/em>&lt;/a>“, by Alyson L. Greiner, Giuseppe Dematteis and Carla Lanza. I found only the italian version of this book (I still have to read this).&lt;/p>
&lt;ul>
&lt;li>As an alternative, this seems similar to “Human Geography A Spatial Perspective AP Edition” by Sarah Bednarz, Mark Bockenhauer, and Fredrik Hiebert.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="why-should-we-learn-the-world-map">Why should we learn the world map?&lt;/h1>
&lt;p>From elementary school to middle school Geography is taught in general terms about the seas and the &lt;em>land&lt;/em>. But after this time in school, this wonderful subject isn’t taught anymore, leaving it in the most incomplete manner possible.&lt;/p>
&lt;p>My personal experience was that at the end of these classes I still had no idea how countries were positioned in the world.&lt;/p>
&lt;p>Geography is not considered as important as &lt;em>Math, English, History&lt;/em>, and other core subjects, by the way, is a tool that gives you an important enrichment to a well-rounded education.&lt;/p>
&lt;p>A list of things we still don’t know about the normal scholastic system:&lt;/p>
&lt;ul>
&lt;li>The spatial position of world countries&lt;/li>
&lt;li>The spatial position of seas&lt;/li>
&lt;li>World capitals&lt;/li>
&lt;li>The flags of the countries&lt;/li>
&lt;li>The current wars&lt;/li>
&lt;/ul>
&lt;p>Exactly, wars, and modern Geography if studied from the correct resources (which will be given on this page) can tell you a lot about the current global situation of the world, this will result in a knowledge boost if you are willing to study &lt;em>History&lt;/em> (and you probably should).&lt;/p>
&lt;h1 id="why-you-should-study-geography">Why you should study geography?&lt;/h1>
&lt;p>You could study the world map just to impress people, but this isn’t the main superpower that is given by Geography, there are many others. If you know better Geography you can understand better Politics, History, and also human behavior.&lt;/p>
&lt;p>There are many types of Geography, one is also called mathematical geography, it’s okay we won’t go into that 😋; we are interested in &lt;strong>physical geography&lt;/strong>, which is the study of the physical characteristics of the land like climate, water distribution, and natural resources.&lt;/p>
&lt;p>If you want to have a better economical and political idea, you should study physical geography for mainly two things&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Spatial awareness on the globe&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Natural resources awareness&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>The first will hugely impact your world of view because you were considering only the continent in which you are inhabiting and not the world as a whole. The second is complementary to the first one for understanding why some places are really important to the global market.&lt;/p>
&lt;h1 id="how-you-should-study-the-world-map">How you should study the world map?&lt;/h1>
&lt;p>There is much software out there, I prepared this program of application to use that works kinda like an intensive &lt;strong>memorization&lt;/strong> course of maps for complete beginners.&lt;/p>
&lt;p>Let’s try to attack the first point, we want to gain awareness about where the countries are placed, and possibly where their capital is also placed.&lt;/p>
&lt;p>The first software you will use is &lt;a href="https://www.google.com/maps" target="_blank" rel="noopener">Google Maps&lt;/a>, this was obvious but it is essential for exploring in-depth the countries and cities that you are going to study with other software. Many of these are android apps and are developed by Andrey Solovyev (&lt;a href="https://asmolgam.com/" target="_blank" rel="noopener">this&lt;/a> is the blog of all his games), except the last one which is a deck for &lt;a href="https://apps.ankiweb.net/" target="_blank" rel="noopener">Anki&lt;/a> (if you don’t know what is Anki, you should read &lt;a href="https://blog.cambridgecoaching.com/what-is-anki-and-how-it-transforms-your-mcat-studying" target="_blank" rel="noopener">this&lt;/a> article by Michael Owen on &lt;strong>active recall&lt;/strong>, and &lt;a href="https://fs.blog/spacing-effect/" target="_blank" rel="noopener">this&lt;/a> from Farnam Street for &lt;strong>spaced repetition&lt;/strong>).&lt;/p>
&lt;p>I put there an ordered list of the applications I suggest respecting the ordering to have a better learning experience.&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://play.google.com/store/apps/details?id=com.asmolgam.maps" target="_blank" rel="noopener">All maps quiz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://play.google.com/store/apps/details?id=com.asmolgam.flags" target="_blank" rel="noopener">World flags quiz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://play.google.com/store/apps/details?id=com.asmolgam.capitals" target="_blank" rel="noopener">World capitals quiz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ankiweb.net/shared/info/2109889812" target="_blank" rel="noopener">Ultimate Geography v5.1 Anki Deck&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>First, install the map quizzes on the smartphone and Google Maps on the PC and now I explain to you why. Use the application and complete all the levels, in each application of Solovyev you have some stars to complete, you can complete them by completing various quizzes for each section. In all applications, the world is divided by continents, which is a big plus for the learning process, I highly recommend studying by continents from the easiest to the hardest.&lt;/p>
&lt;p>The hardest is a subjective thing, probably are just the most distant continent from you 😀.&lt;/p>
&lt;p>The first rush you are doing with the application to each new country you see move to Google Maps and check the neighborhood, try to remember which are the neighbors of the country you studied without looking at the map. If possible, read something about this country, this will help create a model of the country in the brain. Something that you could read about the country is :&lt;/p>
&lt;p>Language
Which kind of politics
History
Food
Religion
Music
Tradition
Art
Architecture
This is a &lt;em>&lt;strong>really important step to do at the start&lt;/strong>&lt;/em>, because this is a &lt;em>learning&lt;/em> process, and after that, the rest of the applications we will use are for &lt;em>&lt;strong>memorization&lt;/strong>&lt;/em>, and you memorize much better once you learn something more about what we are talking instead of just memorizing it like a phone number.&lt;/p>
&lt;p>For the flags application, there is nothing much to say, some flags are really similar and you should study these particular cases, check &lt;a href="https://www.britannica.com/list/flags-that-look-alike" target="_blank" rel="noopener">this&lt;/a> link. Study these &lt;strong>corner cases&lt;/strong> (visualize with closed eyes and spelling their differences should help) and you should be fine for the quiz.&lt;/p>
&lt;p>The last quiz could be the hardest, in my case it’s hard to associate names with other names and memorize them, thanks to this application it becomes easier because there are some images of the country. Of course, for a real study of this country, if you just know the name could be useless, you should try to integrate some notes for better learning. But this isn’t always possible for everybody, so you should just try to memorize it and hope that someday you will reuse it.&lt;/p>
&lt;p>The last step (4) is the &lt;em>real&lt;/em> killer of this study, you are using pure &lt;em>&lt;strong>active recall&lt;/strong>&lt;/em>, there are no multiple selections and there are no letters for writing the answer. You have just to speak out loud (&lt;em>or in your mind&lt;/em>) the answer and then check if it is correct. Thanks to &lt;strong>spatial repetition&lt;/strong> and how the application is tuned you will have more time for practicing harder questions. This Anki Deck contains everything:&lt;/p>
&lt;ul>
&lt;li>Oceans and seas&lt;/li>
&lt;li>Continents&lt;/li>
&lt;li>Maps&lt;/li>
&lt;li>Capitals&lt;/li>
&lt;li>Territories (currently updated and in case of error anyone can propose a solution on the &lt;a href="https://github.com/anki-geo/ultimate-geography" target="_blank" rel="noopener">GitHub repository&lt;/a>)&lt;/li>
&lt;/ul>
&lt;p>For the deck there is a filtered deck feature to focus your study on a subset of cards, for instance, you would like to study all the Europe first.&lt;/p>
&lt;h2 id="how-about-resources">How about resources?&lt;/h2>
&lt;p>We want to learn also how world resources are distributed, this is a hard thing to do. There are no applications but many online resources that we can follow for having an idea of how the world resources are subdivided in 2022.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.investopedia.com/articles/markets-economy/090516/10-countries-most-natural-resources.asp" target="_blank" rel="noopener">10 Countries With the Most Natural Resources&lt;/a> from Investopedia.&lt;/li>
&lt;li>&lt;a href="https://www.mapsofworld.com/thematic-maps/natural-resources-maps/" target="_blank" rel="noopener">Natural Resources Maps&lt;/a> from MoW (Maps of World) which is under MapSherpa (Canada, Ottawa) a Map Distributor. The CEO (and Product Owner) is Dave McIlhagga got a BA in Geography and the company got founded in 1998 (24 years today 30/09/2022).&lt;/li>
&lt;li>A &lt;a href="https://education.nationalgeographic.org/resource/resource-library-distribution-natural-resources/" target="_blank" rel="noopener">collection&lt;/a> of posts from Natural Geographic.&lt;/li>
&lt;/ul>
&lt;h1 id="the-true-size-of-the-countries-on-the-map">The true size of the countries on the map&lt;/h1>
&lt;p>What is shown is not the true size of the countries, there is a polar distortion that occurs in the countries since the flattened map that we usually see is taken from the globe and flattened. For checking the real-world size of a map you should go on &lt;a href="https://www.thetruesize.com/" target="_blank" rel="noopener">thetruesize.com&lt;/a>, select a country and move around to see the distortion from the poles with respect to the equator.&lt;/p>
&lt;p>What is the next step in learning geography?
Is not over yet, the next step for deepening our learning is to learn the internal regions of the countries that we previously learned about. Also, an important part is the culture of these countries that now we know, you should spend most of the time studying this.&lt;/p>
&lt;p>The aim of this post is to lay the &lt;em>groundwork&lt;/em> for those who didn’t have it in elementary school (I’m sure a great many of us won’t) and move up from it.&lt;/p>
&lt;p>These will serve to give a sense of what is being talked about when dealing with the topics of geopolitics, current affairs, etc.&lt;/p>
&lt;p>I hope it can be useful, please leave a comment if there are any problems with this post or information that can be added, as this resource could be reused over time as geography through changes over the years, in its majority, passes the &lt;a href="https://fs.blog/reading/" target="_blank" rel="noopener">test of time&lt;/a>.&lt;/p></description></item></channel></rss>