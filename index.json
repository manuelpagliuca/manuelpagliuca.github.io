[{"authors":null,"categories":null,"content":"I’m a computer scientist and currently I’m studying at UNIMI (Milan, Italy) for my Master’s degree, the focus of my studies will be in Graphics Programming, GP-GPU, 3D Video games and Artificial Intelligence.\nThe video games always have always been a great passion of mine, recently I hatched an urgency for learning more about Graphics Programming and API and I always loved the low-level way of programming. I am eager to gain more knowledge in this fields, and I strive to make myself better everyday in everything I do.\nI run, lift weights and play guitar, as time passes my passions changes to so who knows what my future will keep.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m a computer scientist and currently I’m studying at UNIMI (Milan, Italy) for my Master’s degree, the focus of my studies will be in Graphics Programming, GP-GPU, 3D Video games and Artificial Intelligence.","tags":null,"title":"Manuel Pagliuca","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://manuelpagliuca.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"GPU Computing Course, July 2021, M.Sc. in Computer Science @UniMi During the course of GPU Computing I decided to implement my old version of the Ray Tracer (based on the Ray Tracing in One Weekend from Peter Shirley ) on CUDA. In this paper I compared the two Ray Tracers underlining the huge differences in rendering speed (even without achieving the best warp efficiency).\nFor the comparison I used the same scene in both the implementation composed by 8 different spheres with different materials between lambertian, metal and dielectrics. I highly recommend to check the comparisons and metrics at the end of the paper, the GitHub repository is at this link if you want to see some render just download this zip.\n","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"4295a7c9a50f9e96ed156924e02782f8","permalink":"https://manuelpagliuca.github.io/project/rt/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/rt/","section":"project","summary":"Implementation, Comparison and Profiling of GPU and CPU implementation of the same Ray Tracer.","tags":["GP-GPU","Computer Graphics"],"title":"CUDA Ray Tracer","type":"project"},{"authors":null,"categories":null,"content":"Real-Time Graphics Programming Course, July 2021, M.Sc. in Computer Science @UniMi This was a project I made for the course of Real-time Graphics Programming. The course provided extensive knowledge about real-time computer graphics (you can check the notes I took). At the end of the course, in addition to an oral exam, there was a project related to graphic programming to be developed with OpenGL. I asked Prof. Gadia if there was the possibility of developing it with Vulkan, he granted me the possibility to take this extra-step, it was very tiring but fruitful from the point of view of learning.\nThe project consists in a deferred renderer to improve the overall efficiency of the application in the usage of lights. The scene is composed of three models of the same character, a floor and twenty lights (whose movement and color can be modified), there is the notes containing the various metrics obtained using a different number of lights. The GitHub repository is accessible at this link.\n","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"244f4c2e94cbbd7b9c9c5fb3a03c1c23","permalink":"https://manuelpagliuca.github.io/project/render/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/render/","section":"project","summary":"Implementation of deferred rendering technique in Vulkan","tags":["Computer Graphics","Misc"],"title":"Deferred renderer","type":"project"},{"authors":null,"categories":null,"content":"Bachelor Thesis, December 2019, B.Sc. in Computer Science @UniUPO How the flags are shown on the map. The complete title of the thesis is “Fix-it : Stream processing on event-driven system for managing public disservices”. The project itself consist in developing an E.D.A. (Event-Driven Application) system that will work on a mobile application called “Fix-it”, which is developed using Android Studio. The system is implemented with Google Firebase and Apache Kafka (stream processing). Different technologies involved in the implementation of this project like REST API, Stream Processing and Publisher-Subscribe pattern.\nThe project was developed only by just two guys, we used the concepts of the Agile Manifesto to design our workflow, everything was organized with a Kanban Board on Trello so that we could work consistently by breaking the work down into small parts.\nThe whole thesis is downloadable as PDF here , was written using LaTeX on Overleaf, the Abstract is downloadable here . I attained a presentation of my thesis on Google Meet due to COVID-19, and I talked about my work using these slides . The project was realized under the supervision of the Prof. Davide Cerotti.\n","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"9820567e36a8af97931d8afa3730a3b2","permalink":"https://manuelpagliuca.github.io/project/fix-it/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/fix-it/","section":"project","summary":"My Bachelor Thesis argument","tags":["Distributed Systems","Misc"],"title":"Fix-It, Stream processing on event-driven system for managing public disservices","type":"project"},{"authors":null,"categories":null,"content":"Artificial Intelligence for Videogames course, July 2022, M.Sc. in Computer Science @UniMi This is a project for the course of A.I. for VideoGames at University of Milan, A.Y. 2021/2022. The aim of the project is to implement a Lindenmayer system for procedural generation of tree using discrete distributions (pseudo-random integers) for enhancing the believability of the project.\nCheck the YouTube video for check how the application works while listening to a synthetic explanation. If you want to look at the LateX report, just click this link . You are invited to send a pull request to the GitHub repository . ","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"0e63d1286d8bd0eff18d66578fb6fcd7","permalink":"https://manuelpagliuca.github.io/project/l-system/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/l-system/","section":"project","summary":"Implementation of a Lindenmayer system for the generation of trees through Unity in C#.","tags":["Computer Graphics","Math","Misc"],"title":"L-system in Unity","type":"project"},{"authors":null,"categories":null,"content":"Affective Computing and Natural Interaction courses, Jan 2023, M.Sc. in Computer Science @UniMi\nAbout the project This is a unified project for the courses Affective Computing and Natural Interaction at PhuseLab, University of Milan, A.Y. 2021/2022.\nThe aim of this project is to test the accuracy of early and late fusion approaches on a multi-modal dataset to classify the presence of pain in patients. Participants were subjected to an external heat-pain stimulus through a physical device.\nTheir facial expressions and biophysical signals were recorded using cameras and the application of electrodes, then features were extracted. The descriptors came from two different modalities and will be combined by testing both fusion approaches. Finally, classifications and accuracy estimates were made, based on which it was possible to determine that early fusion is the most accurate approach for the dataset considered.\nFor more information about the project download the report. Pain stimulation occurs in patients through electrostimulators applied to the wrists. When this experiment is performed different bio-potential signals (GSR, EMG, …) and facial expressions are recorded through (through a video camera).\nThe analysis phase involves extracting features from the video signals through computer vision techniques. The features involved are Euclidean distances on particular facial landmarks and gradients on 5 regions of the face.\nOnce the biopotential signals and video features are ready, fusion techniques are used to perform classification.\nEarly fusion involves fusing signals and video features a priori concerning classification. Then train the classifier on the combined inputs. Late fusion involves training three classifiers (of the same type) on different inputs (ECG, GSR, and video), then for each sample in the testing set its prediction is calculated with all three classifiers. The majority prediction is considered; if that prediction coincides with the ground truth, then that prediction is considered correct. The classifier used in this project was Support Vector Machines.\nVideo feature extraction Tools IntelliJ IDEA and Python for developing the project application. Microsoft Excel for working with the .csv files. BioVid dataset. Dependencies OpenCV MediaPipe Sk-learn Numpy Computer vision techniques The computer vision techniques used were for the extraction of facial distances, gradients of facial folds, and head position.\nFacial distances and head pose estimation Gradient for face folds Gradients allow changes in regions of the face to be assessed. An arithmetic average of pixel values in these regions is calculated. This average is again weighted by the number of frames in the video window(which in the dataset was 5 seconds).\nSwitch button There is a debug branch called cv-features in this repository where you can try computer vision systems directly with your computer camera. Using the tab key you can enable and disable debugging for gradients.\nIdeas for future extensions Calculate the gradient only when the pain stimulus is activated and not over the entire window. … ","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"21652ec8d7d8715d90ea4beaae64d756","permalink":"https://manuelpagliuca.github.io/project/pain-recognition/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/pain-recognition/","section":"project","summary":"Test the accuracy of early and late fusion approaches on a multi-modal dataset to classify the presence of pain in patients.","tags":["Computer Vision","AI","Misc"],"title":"Pain Recognition - Dataset analysis and experimental validation","type":"project"},{"authors":null,"categories":null,"content":"Pain Recognition: Dataset analysis and experimental validation Distributed and Pervasive Systems courses, Jun 2022, M.Sc. in Computer Science @UniMi Project for the course of “Distributed and Pervasive Systems” A.A. 2021/2022 for M.Sc.’s in Computer Science.\nThe objective of the project is to design and develop SETA (Self-driving TAxi service), a Self-driving peer-to-peer taxi system for citizens of a smart city. The systems run on a centralized MQTT server which manages the taxis, they are able to communicate with each other via gRPC to ensure access to the resource.\nDev Tools \u0026amp; Languages Languages Java SDK 18.0.2 Technologies gRPC MQTT REST API Protocol Buffers Tools IntelliJ IDEA draw.io for drawing diagrams Git \u0026amp; GitHub as versioning system Within this README are different conceptual diagrams that broadly define the general operation of the system, distributed algorithms, and synchronization procedures.\nThese diagrams do not rigidly follow any model as they are simple and extensively commented.\nGuidelines Rhombuses correspond to flow controls. Rectangles to of operations/procedures. Green circles are collection points. Rectangle colors stand for an object belonging to a certain class (so if there are multiple rectangles of the same color, they are multiple instances of the same class). White circles correspond to processes (used in diagrams for distributed algorithms). Gray circles correspond to threads (used in diagrams for synchronization). General functioning of the project This is an outline of general operation of the system, it corresponds to what is required in the assignment delivery document.\nDistributed algorithms diagrams Ricart \u0026amp; Agrawala algorithm for mutual exclusion The algorithm was developed for guarantee the mutual exclusion to a critical section between multiple processes in a distributed system.\nThe timestamps of the messages are sent in broadcast (in parallel) through the gRPC call coordinateRechargeStream(). The logical clock synchronization is guaranteed through Lamport’s algorithm.\nLet’s consider the following diagram, the nodes in red want to access to the critical section, while the other nodes are doing anything else.\nMore in depth in the first phase (in which the requests are parallelized) the processes will build their lists of dependent nodes. These lists will contain all the nodes which got a smaller timestamp relative to their.\nA node will be able to enter a critical section (i.e., in this project is the recharging operation) if it receives the ACKs from all the other nodes. If this doesn’t happens it will have to wait the residual ACKs.\nOnce that a node has finished with the recharging operation, it will sends an ACK message to the taxi of his list/queue. The first taxis who will fill the number of attended ACKs will access the critical section, and then story repeats.\nRide election algorithm The SETA process generates two rides each 5 seconds on a random district, these two rides are posted on the respective topic of the district. Each taxi is subscribed only on the topic of the district in which it currently belongs.\nFor simplicity let’s assume only one ride (the ride 5) to be published from the SETA process on the first district. All the processes which are subscribed to this topic (inside the green circle) will receive the message for the ride 5.\nAn election mechanism will start through the gRPC call coordinateRideStream(), the request will be performed in broadcast (also to taxi out from district 1) and they will be executed in parallel. The request will contain the Euclidean distance to the starting point, the battery levels and the ID of taxi which is sending the request.\nFor sake of simplicity we are seeing the evolution of the algorithm only from the point of view of the process 1.\nLet’s also assume that the process 1 is the process with the smallest distance from the starting point of the ride. Essentially, this means that the taxi who receives the request will all answer with an ACK (this means that they got a worst distance, battery or grater ID respect to process 1), only in this case the process 1 will achieve the consensus.\nNow the process 1 can execute the ride 5, before it even pass to the local execution of the ride, it publish a message containing the ride 5 on the seta/smartcity/completed topic. This will allow to stop recycling this message (we will see what is it below) and also making know to the taxi which ride ignore since it is already taken.\nThis because all the taxi will have a local list containing all the completed rides taken from the topic, in this way they know which ride to avoid.\nRide recycling There is a system that enforces the recycling of runs, each run that is generated on the topics is embedded within the relative queue of the district. The priority of the queues is based on the order (run ID) of run generation, so older runs will be preferred.\nConceptual schemes of synchronizations User input Command entry by users is handled by …","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"c1a85b272412065daaa52e9fa8ee0ca4","permalink":"https://manuelpagliuca.github.io/project/seta/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/seta/","section":"project","summary":"Test the accuracy of early and late fusion approaches on a multi-modal dataset to classify the presence of pain in patients.","tags":["Distributed Systems","Misc"],"title":"SETA - SElf-driving TA-xi service","type":"project"},{"authors":null,"categories":null,"content":"Computational Geometry Course, March 2021, M.Sc. in Computer Science @UniMi Icosahedron obtained with the application. The aims of this project was to study how the tessellation works with simple domains and to implement the basic logic for triangulate the vertices of simple objects like cubes and then with more complex like torus, sphere and cylinder.\nFor the course project there was also a need to produce a report in the form of website (fully in italian) which is hosted from the university\u0026#39;s mathematics department Federigo Enriques. It contains the theory behind the software, the technique involved, user manual of the application and lot of example videos about the application. Is possible to download the source code of the project from the GitHub Repository by following this link. The course was a complete math course and the project was developed using the OpenGL specification.\nBy accessing the authors section of the course website, is possible to read under my name a note from the course teacher saying: “has developed the project related to the triangulation and tessellation of the lateral surface of some geometric solids obtaining truly amazing visual effects.” - Prof. Alzati\n","date":1624752e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624752e3,"objectID":"12519c8edd74f86a00c8822035310e0e","permalink":"https://manuelpagliuca.github.io/project/geometry/","publishdate":"2021-06-27T00:00:00Z","relpermalink":"/project/geometry/","section":"project","summary":"Study and implementation of computational geometry techniques with OpenGL.","tags":["Computer Graphics","Math"],"title":"Subdivision of surfaces","type":"project"},{"authors":["Manuel Pagliuca","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://manuelpagliuca.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://manuelpagliuca.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Manuel Pagliuca"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://manuelpagliuca.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Manuel Pagliuca"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://manuelpagliuca.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://manuelpagliuca.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Manuel Pagliuca","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://manuelpagliuca.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Manuel Pagliuca","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://manuelpagliuca.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]